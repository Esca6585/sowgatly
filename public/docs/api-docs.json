{
    "openapi": "3.0.0",
    "info": {
        "title": "Product API",
        "description": "API of sowgatly.app",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local server"
        },
        {
            "url": "https://sowgatly.app",
            "description": "Remote server"
        }
    ],
    "paths": {
        "/api/addresses": {
            "get": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Get a list of addresses",
                "operationId": "05d45400dc99e36f78ac7453a329d22e",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Create a new address",
                "operationId": "94fa3d44216521505cefc876e95c85bd",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddressRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Address created successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/addresses/{id}": {
            "get": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Get a specific address",
                "operationId": "0bcfe687364805ac5b63f6543a939676",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Address not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Update an existing address",
                "operationId": "37fd837c934a3d8d398f03edc65c5e39",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddressRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address updated successfully"
                    },
                    "404": {
                        "description": "Address not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Delete an address",
                "operationId": "fd6c07ccab4cab14b0f9d9124fc9f5bf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Address deleted successfully"
                    },
                    "404": {
                        "description": "Address not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/otp/generate": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Generate OTP",
                "operationId": "081228e853685a7b3013eaa9f6069353",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone_number"
                                ],
                                "properties": {
                                    "phone_number": {
                                        "type": "string",
                                        "example": "65656585"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login with OTP",
                "operationId": "da408033eeca26e32aff2cbb663e583b",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone_number",
                                    "otp"
                                ],
                                "properties": {
                                    "phone_number": {
                                        "type": "string",
                                        "example": "65656585"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "0000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "type": "object"
                                        },
                                        "shops": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register with OTP",
                "operationId": "f3c99462e7d72b17224d0716b80f367f",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone_number",
                                    "name"
                                ],
                                "properties": {
                                    "phone_number": {
                                        "type": "string",
                                        "example": "65656565"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Esen Meredow"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "esca6585@modahouse.top"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string"
                                        },
                                        "otp": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "type": "object"
                                        },
                                        "shops": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "device": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "operationId": "6eaab1a5e29916ce9949b0577baaf2f1",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/brands": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get all brands",
                "operationId": "fc4762c01629430942030dcf220ba534",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BrandResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Create a new brand",
                "operationId": "65634a997dfda2178e634ee882c130f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BrandResource"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Brand created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/brands/{id}": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get a specific brand",
                "operationId": "ce7f9160a0c3849dc9dcf3c817afa76b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Brands"
                ],
                "summary": "Update a specific brand",
                "operationId": "e70560b8ce1e5305553eb6427ec5716d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BrandResource"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Brand updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Brands"
                ],
                "summary": "Delete a specific brand",
                "operationId": "5ff3ec7ba20a152062a79c5a34b9b85b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Brand deleted successfully"
                    },
                    "404": {
                        "description": "Brand not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cart/add": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add product to cart",
                "operationId": "74b5ae8a0195a2dfc748a1b7caa89e6b",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product added to cart"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get user's cart",
                "operationId": "f514ef4506ec632e849d68bf8f6a42bf",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of categories",
                "operationId": "8e17a9627dbed245cf032f867569cf11",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "parent",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "operationId": "2140f330d926c3e118cab9391dc4ff42",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name_tm": {
                                        "type": "string",
                                        "example": "test_tm"
                                    },
                                    "name_en": {
                                        "type": "string",
                                        "example": "test_en"
                                    },
                                    "name_ru": {
                                        "type": "string",
                                        "example": "test_ru"
                                    },
                                    "image": {
                                        "description": "Image file",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories/{id}/subcategories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all subcategories by parent category ID",
                "operationId": "3d489dd311a2b2ae582ced3c4e0a4e37",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of subcategories"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a category",
                "operationId": "6a038665b20191638e1608ea8897bf64",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "operationId": "c801ba2dc7ddfc8237ad4be7928f7bf6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name_tm": {
                                        "type": "string",
                                        "example": "test_tm_updated"
                                    },
                                    "name_en": {
                                        "type": "string",
                                        "example": "test_en_updated"
                                    },
                                    "name_ru": {
                                        "type": "string",
                                        "example": "test_ru_updated"
                                    },
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    },
                                    "image": {
                                        "description": "Image file",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": "2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "operationId": "f365d407ea3098d6b545847b09322b13",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/compositions": {
            "get": {
                "tags": [
                    "Compositions"
                ],
                "summary": "Get all compositions",
                "operationId": "ff7b050ac312a78d2095647225d38243",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Compositions"
                ],
                "summary": "Create a new composition",
                "operationId": "d81469ecbc3270b42e286a55c8257dd0",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/compositions/{id}": {
            "get": {
                "tags": [
                    "Compositions"
                ],
                "summary": "Get a specific composition",
                "operationId": "16c21e1d8aa49540f7a518d7573396b0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Composition not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Compositions"
                ],
                "summary": "Update a composition",
                "operationId": "185ea6161b45ffc51586fc287d3671f9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Composition not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Compositions"
                ],
                "summary": "Delete a composition",
                "operationId": "ca89eaf9bfa03f0dac6eaff84c10f1dc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Composition not found"
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get user's orders",
                "operationId": "b151ab9e056a2e8d1de38f2d75d60a77",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order from cart",
                "operationId": "a4cbba2106e588b6d787612d6f4f4f9e",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "shop_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get a specific order",
                "operationId": "93110812e9f34e8dd0d67bd0f13a2def",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all products",
                "operationId": "ab015cc2055ac75e6d23c628675c26e7",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProductResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "operationId": "7ff81b1681ff3180e5b73a2e15f2c67b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a specific product",
                "operationId": "47affec446a4e21ba3cbf0b6b14abb44",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update an existing product",
                "operationId": "b0605b594dede1c8d6d6412b452efd96",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "operationId": "33173a96c7ab5ed4ba9ceaffb4c6003d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/product/search": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Search for products",
                "operationId": "d80b7efa5b94717d2aaeb1a38d9066cd",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProductResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/product/category/{category_id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get products by category",
                "operationId": "fb0abfa680d510029dd03b8c08d7b5f0",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProductResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/featured": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get featured products",
                "operationId": "a402c4cad10855924e254a0c2414756e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductResource"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/latest": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get latest products",
                "operationId": "37c27078c97e4f9f7b4e0459f2dccc48",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductResource"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/discounted": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get discounted products",
                "operationId": "7c0016c8672e731daedbc4b99d726ec7",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductResource"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/by-brand/{brand_id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get products by brand",
                "operationId": "4813419babd86eeed5d744aced5cb7f0",
                "parameters": [
                    {
                        "name": "brand_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProductResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{id}/toggle-featured": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Toggle featured status of a product",
                "operationId": "52b194d27b0693e6db24907b5dd1e9a2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/regions": {
            "get": {
                "tags": [
                    "Regions"
                ],
                "summary": "List all regions",
                "operationId": "ccee2a99d885d0f59e09b4354487ab05",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "country",
                                                    "province",
                                                    "city",
                                                    "village"
                                                ]
                                            },
                                            "parent_id": {
                                                "type": "integer",
                                                "default": null,
                                                "example": null,
                                                "nullable": true
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Regions"
                ],
                "summary": "Create a new region",
                "operationId": "1e48c64261ef945edb506c1a5d112a3d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "country",
                                            "province",
                                            "city",
                                            "village"
                                        ]
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "default": null,
                                        "example": null,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "country",
                                                "province",
                                                "city",
                                                "village"
                                            ]
                                        },
                                        "parent_id": {
                                            "type": "integer",
                                            "default": null,
                                            "example": null,
                                            "nullable": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/regions/{id}": {
            "get": {
                "tags": [
                    "Regions"
                ],
                "summary": "Get a specific region",
                "operationId": "6a2fa52c868de9118a7d732562004117",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "country",
                                                "province",
                                                "city",
                                                "village"
                                            ]
                                        },
                                        "parent_id": {
                                            "type": "integer",
                                            "default": null,
                                            "example": null,
                                            "nullable": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Region not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Regions"
                ],
                "summary": "Update a region",
                "operationId": "3087a020e76a9ce879696fc807030b40",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "country",
                                            "province",
                                            "city",
                                            "village"
                                        ]
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "default": null,
                                        "example": null,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Region updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "country",
                                                "province",
                                                "city",
                                                "village"
                                            ]
                                        },
                                        "parent_id": {
                                            "type": "integer",
                                            "default": null,
                                            "example": null,
                                            "nullable": true
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Region not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Regions"
                ],
                "summary": "Delete a region",
                "operationId": "277b879c8d2c7f4d43258cc4cfefd866",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Region deleted successfully"
                    },
                    "404": {
                        "description": "Region not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/shops": {
            "get": {
                "tags": [
                    "Shops"
                ],
                "summary": "Get all shops",
                "operationId": "95ded005a7ee4576abe647d63831a77a",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ShopResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Shops"
                ],
                "summary": "Create a new shop",
                "operationId": "1146fe689655fef1df0da68f7642c3ba",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Modahouse"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "modahouse@modahouse.top"
                                    },
                                    "mon_fri_open": {
                                        "type": "string",
                                        "example": "09:00"
                                    },
                                    "mon_fri_close": {
                                        "type": "string",
                                        "example": "18:00"
                                    },
                                    "sat_sun_open": {
                                        "type": "string",
                                        "example": "10:00"
                                    },
                                    "sat_sun_close": {
                                        "type": "string",
                                        "example": "16:00"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "region_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "address_name": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "744000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Shop created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShopResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/shops/{id}": {
            "get": {
                "tags": [
                    "Shops"
                ],
                "summary": "Get a shop",
                "operationId": "333920b5aebb487eae92b7d37ffbd24e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shop details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShopResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Shop not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Shops"
                ],
                "summary": "Update a shop",
                "operationId": "9386fdcbb5699b3fe7988bf99dda63cc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Modahouse"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "updated@example.com"
                                    },
                                    "mon_fri_open": {
                                        "type": "string",
                                        "example": "08:00"
                                    },
                                    "mon_fri_close": {
                                        "type": "string",
                                        "example": "19:00"
                                    },
                                    "sat_sun_open": {
                                        "type": "string",
                                        "example": "09:00"
                                    },
                                    "sat_sun_close": {
                                        "type": "string",
                                        "example": "17:00"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "region_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "address_name": {
                                        "type": "string",
                                        "example": "456 New St"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "744000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Shop updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShopResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Shop not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Shops"
                ],
                "summary": "Delete a shop",
                "operationId": "5332e0d6fc1567d7758065a4d525bd42",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Shop deleted"
                    },
                    "404": {
                        "description": "Shop not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "operationId": "d7a57f4d7de18fb0f92501172472c9b6",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "9fea6f2adcb69614c521a7733358382d",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Esen Meredow"
                                    },
                                    "phone_number": {
                                        "type": "integer",
                                        "example": "65656585"
                                    },
                                    "image": {
                                        "description": "Image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRequest"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a user",
                "operationId": "40a5104e23b52137e78c3d3ac48b88a8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "operationId": "aa81151559ac4eeb9606336b205bfa3f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Esca Meredoff"
                                    },
                                    "image": {
                                        "description": "Image file",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "ce06860a51ab016ef66e753544fe4563",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CategoryResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name_tm": {
                        "type": "string",
                        "example": "Category Name TM"
                    },
                    "name_en": {
                        "type": "string",
                        "example": "Category Name EN"
                    },
                    "name_ru": {
                        "type": "string",
                        "example": "Category Name RU"
                    },
                    "category_id": {
                        "type": "integer",
                        "example": null
                    },
                    "image_url": {
                        "type": "string",
                        "example": "http://localhost:8000/category/category-seeder/other_fancy_flowers.png"
                    }
                },
                "type": "object"
            },
            "UserRequest": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Esen Meredow"
                    },
                    "phone_number": {
                        "type": "integer",
                        "example": "65656585"
                    },
                    "image": {
                        "description": "Image file",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "AddressRequest": {
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProductRequest": {
                "required": [
                    "name",
                    "price",
                    "shop_id",
                    "brand_id",
                    "category_id"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number",
                        "format": "float"
                    },
                    "discount": {
                        "type": "integer",
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "nullable": true
                    },
                    "sizes": {
                        "type": "string",
                        "nullable": true
                    },
                    "separated_sizes": {
                        "type": "string",
                        "nullable": true
                    },
                    "color": {
                        "type": "string",
                        "nullable": true
                    },
                    "manufacturer": {
                        "type": "string",
                        "nullable": true
                    },
                    "width": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "height": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "weight": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "production_time": {
                        "type": "integer",
                        "nullable": true
                    },
                    "min_order": {
                        "type": "integer",
                        "nullable": true
                    },
                    "seller_status": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "boolean"
                    },
                    "shop_id": {
                        "type": "integer"
                    },
                    "brand_id": {
                        "type": "integer"
                    },
                    "category_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "BrandResource": {
                "title": "Brand Resource",
                "properties": {
                    "id": {
                        "description": "Transform the resource into an array.",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "logo": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ProductResource": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "discount": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "sizes": {
                        "type": "string"
                    },
                    "separated_sizes": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "manufacturer": {
                        "type": "string"
                    },
                    "width": {
                        "type": "number"
                    },
                    "height": {
                        "type": "number"
                    },
                    "weight": {
                        "type": "number"
                    },
                    "production_time": {
                        "type": "integer"
                    },
                    "min_order": {
                        "type": "integer"
                    },
                    "seller_status": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "boolean"
                    },
                    "shop_id": {
                        "type": "integer"
                    },
                    "brand_id": {
                        "type": "integer"
                    },
                    "category_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ShopResource": {
                "description": "Shop resource",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "mon_fri_open": {
                        "type": "string"
                    },
                    "mon_fri_close": {
                        "type": "string"
                    },
                    "sat_sun_open": {
                        "type": "string"
                    },
                    "sat_sun_close": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "region_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "address_name": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Addresses",
            "description": "API Endpoints of Addresses"
        },
        {
            "name": "Authentication",
            "description": "API Endpoints of Authentication"
        },
        {
            "name": "Brands",
            "description": "API Endpoints of Brands"
        },
        {
            "name": "Cart",
            "description": "API Endpoints for Cart operations"
        },
        {
            "name": "Compositions",
            "description": "API Endpoints of Compositions"
        },
        {
            "name": "Orders",
            "description": "API Endpoints for Order operations"
        },
        {
            "name": "Products",
            "description": "API Endpoints for Products"
        },
        {
            "name": "Regions",
            "description": "API Endpoints of Regions"
        },
        {
            "name": "Shops",
            "description": "API Endpoints of shops"
        },
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}